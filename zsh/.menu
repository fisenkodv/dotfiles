function black {
        echo -ne "\033[0;30m$@\033[0m"  
}

function red {
        echo -ne "\033[0;31m$@\033[0m"  
}

function green {
        echo -ne "\033[0;32m$@\033[0m"  
}

function yellow {
        echo -ne "\033[0;33m$@\033[0m"  
}

function blue {
        echo -ne "\033[0;34m$@\033[0m"  
}

function magenta {
        echo -ne "\033[0;35m$@\033[0m"  
}

function cyan {
        echo -ne "\033[0;36m$@\033[0m"  
}

function light_gray {
        echo -ne "\033[1;37m$@\033[0m"  
}

function dark_gray {
        echo -ne "\033[1;90m$@\033[0m"  
}

function light_red {
        echo -ne "\033[1;91m$@\033[0m"  
}

function light_green {
        echo -ne "\033[1;92m$@\033[0m"  
}

function light_yellow {
        echo -ne "\033[1;93m$@\033[0m"  
}

function light_blue {
        echo -ne "\033[1;94m$@\033[0m"  
}

function light_magenta {
        echo -ne "\033[1;95m$@\033[0m"  
}

function light_cyan {
        echo -ne "\033[1;96m$@\033[0m"  
}

function light_white {
        echo -ne "\033[1;97m$@\033[0m"  
}

function __min {
    echo $(($1 < $2 ? $1 : $2))
}

function __ask {
    res=
    while ! echo $res | grep -E $1 > /dev/null 2>&1
    do  
        read -p "$1: " -n 1 res
        echo
    done

    eval "$2=$res"
}

function __menu {
   local hi=
   while [ "$1" ]
   do
       if [ "$1" = "--values" ]
       then
           shift
           break
       fi
       if [ "$hi" ]
       then
           hi="$hi|$1"
       else
           hi="$1"
       fi
       shift
   done
   local values=
   i=0
   while [ "$1" ]
   do
       if [ "$1" = "--output" ]
       then
           shift
           break
       fi
       values[$i]=$1
       shift
       ((++i))
   done
   local output=$1
   b=0
   i=0
   n=${#values[@]}
   if [ $n -eq 0 ] || [ ! "${values[0]}" ]
   then
       return 1
   fi
   if [ $n -eq 1 ] && [ "${values[0]}" ]
   then
       eval "$output=${values[0]}"
       return 0
   fi
   while [ "$b" -le "$n" ]; do
       s=$(__min 9 $((n - b - 1)))
       for i in $(seq 0 $s)
       do
           echo -n $(green "$i: ")
           if ! echo ${values[$((b + i))]} | grep -E --color "$hi"
           then
               echo ${values[$((b + i))]}
           fi
       done
       __ask "[0-${i}yn]" c
       if [ "$c" = "n" ];
       then
           return 2
       elif [ "$c" != "y" ]
       then
           eval "$output=${values[$((b + c))]}"
           return 0
       fi
       let b+=10
   done
   return 3
}

function ff {
   found=
   values=$(find . -type f 2> /dev/null | grep "$1" | grep "$2" | grep "$3")
   ff=
   if __menu $1 $2 $3 --values $values --output found
   then
       if is_mac
       then
           echo -n $found | pbcopy
           echo copied to the buffer: $(green $found)
       else
           echo $found
           ff=$found
       fi
       return 0
   fi
   echo $(red nothing found)
   return 1
}